buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.4.31"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

version = '1.0.0'
group = 'possible_triangle.bigsip'
archivesBaseName = 'bigsip'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // Change to your preferred mappings
    mappings channel: 'official', version: config.mc_version
    // Add your AccessTransformer
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                bigsip {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                bigsip {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            args '--mod', config.mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                bigsip {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url = 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${config.mc_version}-${config.forge_version}"

    fg.deobf(implementation("thedarkcolour:kotlinforforge:${config.kotlin_for_forge_version}"))

    //fg.deobf(compile("curse.maven:tough-as-nails-246391:${config.tough_as_nails_version}"))
    fg.deobf("curse.maven:tough-as-nails-246391:${config.tough_as_nails_version}")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        languageVersion = '1.4'
        apiVersion = '1.4'
    }
}

// Include assets and data from data generators
sourceSets.main.resources {
    srcDirs 'src/generated/resources/'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "bigsip",
                "Specification-Vendor"    : "bigsipsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${config.mod_version}",
                "Implementation-Vendor"   : "bigsipsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}
